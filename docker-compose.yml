version: '3.8'

services:
  # --- Serviço do Frontend ---
  frontend:
    build:
      context: . # O contexto é a raiz do monorepo, para que o Dockerfile possa aceder a tudo.
      dockerfile: ./apps/frontend/Dockerfile # Caminho para o Dockerfile do frontend.
    ports:
      - "3000:3000"
    # A variável de ambiente é passada para que o frontend saiba onde está o backend DENTRO da rede Docker.
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3001
    depends_on:
      - backend
    networks:
      - project-hub-network

  # --- Serviço do Backend ---
  backend:
    build:
      context: . # O contexto também é a raiz do monorepo.
      dockerfile: ./apps/backend/Dockerfile # Caminho para o Dockerfile do backend.
    ports:
      - "3001:3001"
    # O ficheiro .env é passado para o container para configurar a base de dados e outros segredos.
    env_file:
      - ./apps/backend/.env
    depends_on:
      - db
    networks:
      - project-hub-network

  # --- Serviço da Base de Dados ---
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=projecthub
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5434:5432" # Mapeia a porta do container para a sua máquina local.
    volumes:
      - postgres_data:/var/lib/postgresql/data # Garante que os dados da base de dados persistem.
    networks:
      - project-hub-network

# --- Volumes e Redes ---
volumes:
  postgres_data:

networks:
  project-hub-network:
    driver: bridge